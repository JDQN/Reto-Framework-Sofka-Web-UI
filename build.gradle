plugins {
    id 'java'
    id 'java-library'
    id 'jacoco'
    id 'idea'
    id 'application'
    id 'org.sonarqube' version "2.8"
}

compileJava{
    options.encoding('UTF-8')
}
compileTestJava{
    options.encoding('UTF-8')
}

setMainClassName "co.com.client.WebProject.test"
group "co.com.sofka"
version '1.0-SNAPSHOT'
setSourceCompatibility  JavaVersion.VERSION_1_8
setTargetCompatibility  JavaVersion.VERSION_1_8


wrapper {
    gradleVersion '5.6.3'
    distributionType Wrapper.DistributionType.ALL
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://mymavenrepo.com/repo/Dw3PQf7ouaoDzyqMPoa5/"
        credentials {
            username = System.getenv("MAVEN_USER")
            password = System.getenv("MAVEN_PASSWORD")
        }
    }
}

dependencies {

    implementation 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    api 'co.com.sofka.test:Automation:3.0.5'
    api 'io.cucumber:cucumber-java:4.2.0'
    api 'io.cucumber:cucumber-junit:4.2.0'

    compileOnly fileTree(dir: 'libs', include: '*.jar')

    /*Todo: Lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'

    Todo: JavaFaker
    implementation 'com.github.javafaker:javafaker:1.0.2'*/



}

jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

//sonarqube {
//    properties {
//        property "sonar.exclusions", ""
//        property "sonar.jacoco.itReportPaths", "${buildDir}/jacoco/test.exec"
//    }
//}
//
//tasks.sonarqube.dependsOn(build)

test {
    reports.junitXml.setEnabled(false)
    reports.html.setEnabled(false)
    //  maxParallelForks  1
    testLogging {
        exceptionFormat = 'full'
    }
}

